#include "1028A/init.h"
#include "1028A/robot.h"

void _1028A::robot::auton(){
    pros::Inertial.set_rotation(0);
    if (autonSelect == 1){
        //Left Side
        time::forward(-127, 100);
        pros::Intake.move(-127);
        pros::delay(140);
        pros::Intake.brake();
        time::forward(80, 100);
        pros::delay(400);
        time::turn(50, 500);
        fwtarget = 70;
        task::start("fw", flywheel::startFlywheelTask);
        pros::delay(5000);
        pros::Intake.move(-127);
    }
    else if (autonSelect == 2){
        //Right Side
        flywheelMode = 2;
        fwtarget = 105;
        task::start("fw", flywheel::startFlywheelTask);
        pros::Intake.move(127);
        time::forward(45, 1000);
        pros::delay(2500);
        pros::Intake.move(-127);
        pros::delay(170);
        fwtarget = 108;
        pros::Intake.brake();
        pros::delay(1200);
        pros::Intake.move(-127);
        pros::delay(170);
        pros::Intake.brake();
        fwtarget = 111;
        pros::delay(1400);
        pros::Intake.move(-127);
        pros::delay(170);
        pros::Intake.brake();
        pros::delay(500);
        time::turn(-127, 240);
        pros::delay(500);
        time::forward(-80, 700);
        time::turn(127, 230);
        pros::delay(500);
        time::forward(-100, 250);
        pros::Intake.move(127);
        pros::delay(350);
        pros::Intake.brake();
        time::forward(100, 150);
        pros::delay(250);
        fwtarget = 100;
        pid::turn(-74, 127, 1, 800);
        pros::delay(250);
        pros::Intake.move(127);
        time::forward(127, 600);
        time::forward(40, 1200);
        pros::delay(250);
        pid::turn(74, 127, 1, 800);
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        fwtarget = 107;
        pros::delay(1200);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
    }
    else if (autonSelect == 3){
        //Solo Win Point
        fwtarget = 105;
        task::start("fw", flywheel::startFlywheelTask);
        pros::Intake.move(127);
        time::forward(-100, 100);
        pros::delay(510);
        time::forward(127, 100);
        pid::turn(-70, 127, 1, 700);
        time::forward(-127, 535);
        pid::turn(3, 127, 1, 700);
        time::forward(127, 550);
        pid::turn(-40, 127, 1, 800);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        fwtarget = 108;
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        pros::delay(500);
        pid::turn(46.75, 127, 1, 600);
        pros::Intake.move(127);
        time::forward(40, 2280);
        fwtarget = 104;
        pros::delay(600);
        pid::turn(-73, 127, 1, 800);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        fwtarget = 110;
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        fwtarget = 114;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        pros::delay(500);
        pid::turn(-136, 127, 1, 700);
        time::forward(-127, 550);
        pid::turn(-70, 127, 1, 700);
        time::forward(-127, 100);
        pros::Intake.move(127);
        pros::delay(550);
        pros::Intake.brake();
    }
    else if (autonSelect == 8){
        //Skills
        pros::Intake.move(127);
        time::forward(-100, 100);
        pros::delay(400);
        time::rightOnly(127, 300);
        time::forward(70, 550);
        pid::turn(75, 127, 1, 2000);
        pid::turn(75, 127, 1, 1000);
        pid::turn(75, 127, 1, 500);
        pid::turn(75, 127, 1, 100);
        time::forward(-127, 535);
        pros::delay(1000);
        time::forward(127, 200);
        fwtarget = 96;
        task::start("fw", flywheel::startFlywheelTask);
        pid::turn(-8, 127, 1, 1000);
        pid::turn(-8, 127, 1, 500);
        pid::turn(-8, 127, 1, 250);
        pid::turn(-8, 127, 1, 100);
        time::forward(127, 725);
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(140);
        pros::Intake.brake();
        fwtarget = 127;
        pros::delay(60);
        pros::Intake.move(-127);
        pros::delay(140);
        pros::Intake.brake();
        pros::delay(85);
        pros::Intake.move(-127);
        pros::delay(140);
        pros::Intake.brake();
        pros::delay(1000);
        pid::turn(-8, 127, 1, 1000);
        pid::turn(-8, 127, 1, 500);
        pid::turn(-8, 127, 1, 250);
        pid::turn(-8, 127, 1, 100);
        time::forward(-127, 600);
        fwtarget = 93;
        pid::turn(43, 127, 1, 1000);
        pid::turn(43, 127, 1, 500);
        pid::turn(43, 127, 1, 250);
        pid::turn(43, 127, 1, 100);
        pros::Intake.move(127);
        time::forward(38, 3000);
        pros::delay(900);
        pid::turn(-53, 127, 1, 1000);
        pid::turn(-53, 127, 1, 500);
        pid::turn(-53, 127, 1, 250);
        pid::turn(-53, 127, 1, 100);
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        fwtarget = 100;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        fwtarget = 103;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        pros::delay(500);
        pid::turn(3, 127, 1, 1000);
        pid::turn(3, 127, 1, 500);
        pid::turn(3, 127, 1, 250);
        pid::turn(3, 127, 1, 100);
        fwtarget = 95;
        pros::Intake.move(127);
        pros::delay(500);
        time::forward(25, 4800);
        pros::delay(1000);
        pid::turn(-106, 127, 1, 1000);
        pid::turn(-106, 127, 1, 500);
        pid::turn(-106, 127, 1, 250);
        pid::turn(-106, 127, 1, 100);
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        fwtarget = 98;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        fwtarget = 100;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        pros::delay(500);
        fwtarget = 103;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        pros::delay(500);
        pid::turn(-75, 127, 1, 1000);
        pid::turn(-75, 127, 1, 500);
        pid::turn(-75, 127, 1, 250);
        pid::turn(-75, 127, 1, 100);
        time::forward(-127, 855);
        pros::delay(1000);
        pid::turn(-180, 127, 1, 1000);
        pid::turn(-180, 127, 1, 500);
        pid::turn(-180, 127, 1, 250);
        pid::turn(-180, 127, 1, 100);
        pros::Intake.move(127);
        time::forward(-100, 400);
        pros::delay(400);
        time::rightOnly(127, 400);
        time::forward(70, 550);
        pid::turn(-75, 127, 1, 1000);
        pid::turn(-75, 127, 1, 500);
        pid::turn(-75, 127, 1, 250);
        pid::turn(-75, 127, 1, 100);
        time::forward(-127, 535);
        pros::delay(600);
        time::forward(127, 225);
        pros::Intake.move(-127);
        pros::delay(140);
        pros::Intake.brake();
        pid::turn(-140, 127, 1, 1000);
        pid::turn(-140, 127, 1, 500);
        pid::turn(-140, 127, 1, 250);
        pid::turn(-140, 127, 1, 100);
        pros::Intake.move(127);
        time::forward(40, 3800);
        fwtarget = 95;
        pid::turn(-240, 127, 1, 1000);
        pid::turn(-240, 127, 1, 500);
        pid::turn(-240, 127, 1, 250);
        pid::turn(-240, 127, 1, 100);
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        fwtarget = 100;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        fwtarget = 103;
        pros::Intake.brake();
        pros::delay(700);
        pros::Intake.move(-127);
        pros::delay(165);
        pros::Intake.brake();
        pid::turn(-145, 127, 1, 1000);
        time::forward(-127, 1100);
        pid::turn(-140, 127, 1, 1000);
        pros::expansionMid.set_value(1);
        pros::expansionLeft.set_value(1);
        pros::expansionRight.set_value(1);
    }   
}